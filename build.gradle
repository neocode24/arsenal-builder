/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.1.1/userguide/tutorial_java_projects.html
 */
buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
        BUILD_VERSION = new Date().format("yyyyMMddHHmmss")
        mavenUrl = 'https://repo1.maven.org/maven2/'
        gradleUrl = 'https://plugins.gradle.org/m2/'
    }
    repositories {
        maven {
            url "${mavenUrl}"
        }
        maven {
            url "${gradleUrl}"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.franzbecker:gradle-lombok:1.14")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'pmd'

group = 'com.kt.arsenal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven {
        url "${mavenUrl}"
    }
    maven {
        url "${gradleUrl}"
    }
}

if(!project.hasProperty('env') || !env){
    ext.env = 'local'
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java"
        }
        resources {
            srcDirs "src/main/resources"
        }
    }
}

bootJar {
    archiveName "arsenal-builder" + ".jar"
    launchScript()
}

System.setProperty('spring.profiles.active', env)

dependencies {


    // local repository dependencies
    compile fileTree (dir: 'lib', include:['*.jar'])

    // SpringBoot 2.x
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework:spring-test:5.1.3.RELEASE')

    // kubernetes client
    compile('io.kubernetes:client-java:5.0.0')


    // lombok
    implementation('org.projectlombok:lombok:1.18.12')

    // test framework
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('junit:junit:4.12')
    testCompile("org.assertj:assertj-core:3.11.1")


    // apache commons utils
    compile('org.apache.commons:commons-collections4:4.2')
    compile('org.apache.commons:commons-math3:3.6.1')
    compile('org.apache.commons:commons-lang3:3.8.1')
    compile('org.apache.commons:commons-text:1.6')
    compile('commons-beanutils:commons-beanutils:1.9.3')
    compile('commons-codec:commons-codec:1.11')
    compile('commons-io:commons-io:2.6')
    implementation('com.google.guava:guava:28.1-jre')

    // Naver lucy xss filter
    compile("com.navercorp.lucy:lucy-xss:1.6.3")
    compile("com.navercorp.lucy:lucy-xss-servlet:2.0.0")

    // json-smart
    compile('net.minidev:json-smart:2.3')

    // caffeine cache
    compile('com.github.ben-manes.caffeine:caffeine:2.8.1')

    // JSONObject
    compile('org.json:json:20090211')

    // org.jasypt/jasypt
    compile('org.jasypt:jasypt:1.9.2')

    // jasypt
    compile('com.github.ulisesbocchio:jasypt-spring-boot:2.1.0')

    // prometheus
    implementation('io.micrometer:micrometer-registry-prometheus:1.1.5')
    compile('io.prometheus:simpleclient:0.9.0')

    // stream ex
    compile('one.util:streamex:0.7.2')

    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')

    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

}

test {
    useJUnitPlatform()
}
